server {
    listen      80;
    server_name dev.getthegroceries.io wwww.dev.getthegroceries.io;
}

server {
    listen      80;
    listen [::]:80;
    server_name getthegroceries.io www.getthegroceries.io;

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    #for certbot challenges (renewal process)
    location ~ /.well-known/acme-challenge {
        allow all;
        root /data/letsencrypt;
    }
}

#https://getthegroceries.io
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name getthegroceries.io;

    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/getthegroceries.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/getthegroceries.io/privkey.pem;

    ssl_buffer_size 8k;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;

    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    return 301 https://www.getthegroceries.io$request_uri;
}

#https://www.getthegroceries.io
server {
    server_name www.getthegroceries.io;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_tokens off;

    ssl on;

    ssl_buffer_size 8k;
    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4;

    ssl_certificate /etc/letsencrypt/live/getthegroceries.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/getthegroceries.io/privkey.pem;

   # Configure NGINX to deliver static content from the specified folder
   location /static {
       alias /usr/src/GetTheGroceries/static;
   }

   # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
   location / {
       # Define the location of the proxy server to send the request to
       proxy_pass http://flask:5000;

       # Redefine the header fields that NGINX sends to the upstream server
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   }
}
